name: Build and deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Run workflow manually
jobs:
    test_pull_request:
      name: test_pullrequests
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
           os: [ ubuntu-latest, macOS-latest ]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12
        - run: npm ci
        - run: npm i -g
        - name: Linting
           - eslint .
           - eslint . --fix
        - run: npm run build
    build:
      name: Build
      needs: test_pull_request
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@main
        - name: Install dependencies
          run: npm ci
        - name: Build dependencies
          run: npm run build
        - name: Fix linting
          run: eslint .
         - name: Archive production artifact
          uses: actions/upload-artifact@main
          with:
            name: dist
            path: dist
    docker-build-push:
      name: Docker build image
      runs-on: ubuntu-latest
      steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            image: robot-testing-viarent:latest
            push: true
            tags: abdualiandrei/fullstack-renting-application:latest
    # deploy:
    #   name: Deploy
    #   needs: build
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@main
    #     # - name: Download artifact
    #       # uses: actions/download-artifact@main
    #       with:
    #         name: dist
    #         path: dist
    #     - name: Deploy to Firebase
    #       uses: w9jds/firebase-action@master
    #       with:
    #         args: deploy --only hosting
    #       env:
    #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN}}
